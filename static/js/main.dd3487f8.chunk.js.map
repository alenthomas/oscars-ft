{"version":3,"sources":["assets/irishman.jpg","assets/fordvferrari.jpg","assets/jojorabbit.jpg","assets/joker.jpg","assets/littlewomen.jpg","assets/marriagestory.jpg","assets/onceinhollywood.jpg","assets/parasite.jpg","assets/1917.jpg","components/Card.js","components/Landing.js","constants.js","components/BestPicture.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","name","className","onClick","charAt","toUpperCase","slice","children","SubCard","class","src","url","alt","details","vote","voteAction","Landing","select","console","log","state","api","err","to","React","Component","resources","irish","fordvferrari","jojorabbit","joker","littlewomen","marriagestory","nineteen","onceinholly","parasite","BASE_URL","BestPicture","fetchBestPicture","fetch","then","e","json","setState","catch","error","postBestPicture","itemName","method","headers","body","JSON","stringify","token","category","choice","getVotes","polls","filter","item","length","postVote","data","nominations","this","map","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd3487f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/irishman.5b864455.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fordvferrari.d360ff94.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jojorabbit.d067309d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/joker.11110773.jpg\";","module.exports = __webpack_public_path__ + \"static/media/littlewomen.8be9f88a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/marriagestory.cd8e232a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/onceinhollywood.2b6f2548.jpg\";","module.exports = __webpack_public_path__ + \"static/media/parasite.7f4dd3c2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1917.57e1b3f0.jpg\";","import React from 'react';\n\nexport function Card(props) {\n  const { name = 'year', className = '' } = props;\n  return (\n    <div className={`block box ${className}`} onClick={props.onClick}>\n      <div className='content is-medium'>\n        {`${name.charAt(0).toUpperCase() + name.slice(1)}`}\n      </div>\n      <div>\n        {props.children}\n      </div>\n    </div>\n  )\n}\n\nexport function SubCard(props) {\n  return (\n    <div className={`block box ${props.className}`}>\n      <article class=\"media\">\n        <figure class=\"media-left\">\n          <p class=\"image is-128x128\">\n            <img src={props.url} alt={props.name}/>\n          </p>\n        </figure>\n        <div class=\"media-content\">\n          <div class=\"content\">\n            <p><strong>{props.name}</strong></p>\n            <div className='content'>\n              <p>\n                Film Synopsis: <br />{props.details}\n              </p>\n            </div>\n          </div>\n          <div>Votes: <strong>{props.vote}</strong></div>\n        </div>\n      </article>\n      <div className='action'><button onClick={() => props.voteAction(props.className, props.name)} className='button is-primary'>Vote</button></div>\n    </div>\n  )\n}","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nimport { Card as Progress } from './Card';\n\nexport class Landing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { api: {}, err: null };\n  }\n  // componentDidMount() {\n  //   fetch(`/polls/poll-best-picture?format=json`)\n  //     .then(e => e.json())\n  //     .then(e => {\n  //       console.log(e);\n  //       this.setState({ api: e });\n  //     })\n  //     .catch(err => {\n  //       this.setState({err: err})\n  //     console.error(err)\n  //   })\n  // }\n\n  select = (name) => {\n    console.log(`in ${name}`)\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h3 className='title is-large'>Oscars 2020</h3>\n        <div className=\"columns\">\n          <div className=\"column\">\n            <Link to=\"/best-picture\">\n              <Progress name='Best Picture' className='category' onClick={() => this.select('Best Picture')}/>\n            </Link>\n          </div>\n          <div className=\"column\">\n            <Link to=\"/best-actress-leading\">\n              <Progress name='Best Actress Leading' className='category' onClick={() => this.select('Best Actress Leading')} />\n            </Link>\n          </div>\n          <div className=\"column\">\n            <Link to=\"/best-actror-leading\">\n              <Progress name='Best Actor Leading' className='category' onClick={() => this.select('Best Actor Leading')} />\n            </Link>\n          </div>\n          <div className=\"column\">\n            <Link to=\"/best-actress-supporting\">\n              <Progress name='Best Actress Supporting' className='category' onClick={() => this.select('Best Actress Supporting')} />\n            </Link>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import irish from './assets/irishman.jpg'\nimport fordvferrari from './assets/fordvferrari.jpg'\nimport jojorabbit from './assets/jojorabbit.jpg'\nimport joker from './assets/joker.jpg'\nimport littlewomen from './assets/littlewomen.jpg'\nimport marriagestory from './assets/marriagestory.jpg'\nimport onceinholly from './assets/onceinhollywood.jpg'\nimport parasite from './assets/parasite.jpg'\nimport nineteen from './assets/1917.jpg'\n\nexport const resources = {\n  'The Irishman': irish,\n  'Ford V Ferrari': fordvferrari,\n  'Jojo Rabbit': jojorabbit,\n  'Joker': joker,\n  'Little Women': littlewomen,\n  'Marriage Story': marriagestory,\n  '1917': nineteen,\n  'Once Upon A Time...In Hollywood': onceinholly,\n  'Parasite': parasite,\n}","import React from 'react';\nimport { SubCard } from './Card';\nimport { resources } from '../constants';\n\nconst BASE_URL = 'http://127.0.0.1:8000'\n\n\n\nexport class BestPicture extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { api: {polls: [], nominations: []} };\n  }\n\n  fetchBestPicture = () => {\n    fetch(`${BASE_URL}/polls/poll-best-picture?format=json`)\n      .then(e => e.json())\n      .then(e => {\n        // console.log(e);\n        this.setState({ api: e });\n      })\n      .catch(err => {\n        this.setState({err: err})\n      console.error(err)\n    })\n  }\n\n  postBestPicture = (itemName) => {\n    return fetch(`${BASE_URL}/polls/poll-best-picture?format=json`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ token: '', category: 'Best Picture', choice: itemName })\n      })\n      .then(e => console.log(e))\n      .catch(err => console.error(err));\n  }\n\n  componentDidMount() {\n    this.fetchBestPicture();\n  }\n\n  getVotes = (name) => {\n    const vote = this.state.api.polls.filter(e => e.item.name === name);\n    if (vote.length > 0) {\n      return vote[0].vote;\n    }\n    return null;\n  }\n\n  postVote = (category, itemName) => {\n    console.log('Best Picture', itemName)\n    this.postBestPicture(itemName).then(data => this.fetchBestPicture());\n    // this.fetchBestPicture();\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <h3 className='title is-large'>Best Picture</h3>\n        <br />\n        {/* <div className=\"columns is-mobile\"> */}\n        {this.state.api.nominations.map(e => {\n          const url = resources[e.name];\n          return (\n            <div className='column'>\n              <SubCard voteAction={this.postVote} className='category' url={url} name={e.name} details={e.details} vote={this.getVotes(e.name) }/>\n            </div>)\n        })\n        }\n          </div>\n      // </div>\n    )\n  }\n}","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { Landing } from './components/Landing';\nimport { BestPicture } from './components/BestPicture';\n\n\nimport './App.scss';\n\n\n\nexport function Progress(props) {\n  const { progress = 0, name = 'year', className = '' } = props;\n  return (\n    <div className={`block box ${className}`} onClick={props.onClick}>\n      <div className='content is-medium'>\n        {`${name.charAt(0).toUpperCase() + name.slice(1)}`}\n      </div>\n      <progress className=\"progress is-primary\" value={`${progress}`} max=\"100\">{`${progress}%`}</progress>\n      <div>\n        {props.children}\n      </div>\n    </div>\n  )\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { api: {}, err: null };\n  }\n\n\n  select = (name) => {\n    console.log(`in ${name}`)\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Switch>\n            <Route path=\"/\" exact={true}>\n              <Landing />\n            </Route>\n            <Route path=\"/best-picture\" exact={true}>\n              <BestPicture />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}